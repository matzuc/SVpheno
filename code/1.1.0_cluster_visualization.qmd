---
title: "cluster visualization"
format: html
warning: false
message: false
# html standalone
standalone: true
editor: 
  markdown: 
    wrap: 72
    
---

## libraries

load a few libraries

```{r}
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(ggthemes)
library(sf)
library(ggspatial)
library(viridis)
library(raster)
library(stringr)

library(factoextra)

library(ggOceanMaps)
library(grafify)
```


Uso i cluster identificati in 
[I'm an inline-style link](https://www.google.com)

""D:\Dropbox\R_projects\SVpheno\code\1.0.2_gap_analysis.html""




I consider the 8 clusters (+ others) as the final bioregions


```{r}
raw <- raster(here::here('data', '1.0_cluster_8_gap_nrefs_default.nc'))

#plot(r8raw)

```



```{r}
# fig height
#| label: fig-Tmax
#| echo: FALSE
#| warning: FALSE
#| fig-height: 5
#| fig-width: 5




pl_clus_geoSpace <- raw |> as.data.frame(xy = T)%>% 
  ggplot(aes(x = x, y= y, fill = factor(cluster))) +
  geom_tile() + 
  #facet_grid(alpha ~ .) +
  theme(legend.position = "none") +
  ggtitle("Cluster, in geo-space") +
  theme_few()

pl_clus_geoSpace


```


Vectorize the raster

```{r}
pol <- rasterToPolygons(raw) |> st_as_sf() |> 
  group_by(cluster) |>
  summarise(geometry = st_union(geometry)) 
st_crs(pol) <- 32633
plot(pol)



polDEG <- st_transform(pol, crs = 4326)


# lands
sv <- st_read("D:/Dropbox/R_projects/svalbaRd/data/Svalbard_UTM.shp")
svDEG <- st_transform(sv, crs = 4326)



xmin <- extent(polDEG)@xmin + 0.26
xmax <- extent(polDEG)@xmax - 0.26
ymin <- extent(polDEG)@ymin + 0.1
ymax <- 83

# study area
studyarea <- st_polygon(list(rbind(c(xmin, ymin), c(xmin, ymax), c(xmax, ymax), c(xmax, ymin), c(xmin, ymin)))) |> st_bbox() |> st_as_sfc() |> st_as_sf() 
# add vertex to the polygon
studyarea <- st_cast(studyarea, "POLYGON")
# add the number of vertexes
studyarea <- smoothr::densify(studyarea, 1000)
st_crs(studyarea) <- 4326

studyarea <- st_difference(studyarea, svDEG) 




studyarea <- st_transform(studyarea, crs = 32633)
studyareaUTM <- studyarea |> st_transform(crs = 32633)
plot(studyareaUTM)


ggplot()+
	geom_sf(data = studyareaUTM, fill = "NA", colour = "red") +
	geom_sf(data = pol, aes(fill = factor(cluster)), alpha = 0.5) +
	theme_bw()


regions <- pol |> summarize(n = n()) |> 
	mutate(ID = 1)
# union
diff <- st_difference(studyareaUTM, regions) |> mutate(cluster = -1) |> dplyr::select(cluster) |> rename(geometry = x)
plot(diff)


diff <- diff |> summarize(ID = n())

# separate the polygons
diff <- diff |> st_cast("POLYGON") |> st_sf() |> 
	dplyr::select(-ID) |> mutate(cluster = -1)
diff <- diff |>  mutate(ID = 1:n())
plot(diff["ID"])




diff <- diff |> filter(ID > 30 & ID < 70) |> dplyr::select(-ID)

# atttach the diff to the cluster 
bioreg <- rbind(pol, diff) |> dplyr::select(cluster)
# remove
ggplot(bioreg)+
	geom_sf( aes(fill = factor(cluster)), alpha = 0.5) 





bioreg$bioregions <- factor(bioreg$cluster, levels = c(0: 7, -1), labels = c("1", "2", "3", "4", "5", "6", "7", "8", "other"))

st_write(bioreg, here::here("out",  "1.1.0_cluster_8_gap_UTM.shp"), overwrite = TRUE, append=FALSE)

bioregDEG <- st_transform(bioreg, crs = 4326)

st_write(bioregDEG, here::here("out",  "1.1.0_cluster_8_gap_DEG.shp"), overwrite = TRUE, append=FALSE)



```




```{r}

basemap(limits = c(-7, 52, 68, 85), rotate = T,
				bathymetry = F) +
theme(axis.title = element_blank(),
      axis.text = element_blank(),
      axis.ticks.x = element_blank(),
      axis.ticks.y = element_blank()
      ) +
	geom_sf(data = bioregDEG, aes(fill = bioregions), color = NA, alpha = 0.65) +
	# legend on the bottom
	theme(legend.position = "bottom") +
	#modify guide changing the name of the fill
labs(fill = "Bioregion") +
	#scale_fill_grafify()+
	 grafify::scale_fill_grafify(palette = "kelly")


ggsave(here::here("out",  "1.1.0_bioregions_map.png"), width = 10, height = 10, dpi = 300, bg = "white")

```







# serie temporale

```{r}
rfull <- stack(here::here("data", "CDS/daily_smoothed/daily_smoothed_climatology_valid.nc"))



bioregionsR <- rasterize(bioreg, rfull, field = "cluster")
writeRaster(bioregionsR, here::here("out",  "1.1.0_bioregionsUTM.tif"), overwrite = TRUE)
#plot(bioregionsR)

rtot <- stack(bioregionsR, rfull)
names(rtot)[1] <- "cluster"
rdf <- as.data.frame(rtot, xy = TRUE)

	
rdf_long <- pivot_longer(rdf, -c(x, y, cluster), names_to = "valabr", values_to = "value")
rdf_long$doy <- as.numeric(gsub("X", "", rdf_long$valabr))
rdf_long$bioregions <- factor(rdf_long$cluster, levels = c(0: 7, -1), labels = c("1", "2", "3", "4", "5", "6", "7", "8", "other"))


ave <- rdf_long |> 
	filter(!is.na(value)) |> 
	#rename(K = cluster) |>
	#mutate(K = factor(K)) |> 
	group_by(bioregions, doy) |>
	summarise(ave = mean(value, na.rm = T), n = n(), se = plotrix::std.error(value), sd = sd(value))


write.csv(ave, here::here("out", paste0("1.1.0_bioregion_climatology.csv")), row.names = FALSE)

```

```{r}

aveth <- ave |> filter(!is.na(bioregions)) |> 
	group_by(bioregions) |> 
	summarise(th = median(ave, na.rm = T)* 1.05)

ggplot(ave |> filter(!is.na(bioregions)), aes(doy, ave)) +
	geom_line() +
	facet_wrap(~bioregions, ncol = 3) +
	theme_few() +
	geom_ribbon(aes(ymin = ave - sd, ymax = ave + sd, fill = bioregions), alpha = 0.65) +
	scale_fill_grafify(palette = "kelly") +
	# remove legend
	theme(legend.position = "none") +
	xlab("Day of the year") +
	ylab("Chlorophyll-a concentration (mg/m3)") +
	geom_hline(data = aveth, aes(yintercept = th, colour = bioregions), linetype = "dashed") +
	scale_colour_grafify(palette = "kelly") 

ggsave(here::here("out", paste0("1.1.0_bioregion_climatology.png")), width = 12, height = 8, dpi = 300, bg = "white")



```


currents



```{r}
A <- basemap(limits = c(-7, 52, 68, 85), rotate = T,
				bathymetry = F) +
theme(axis.title = element_blank(),
      axis.text = element_blank(),
      axis.ticks.x = element_blank(),
      axis.ticks.y = element_blank()
      ) +
	geom_sf(data = bioregDEG, aes(fill = bioregions), color = NA, alpha = 0.65) +
	# legend on the bottom
	theme(legend.position = "bottom") +
	#modify guide changing the name of the fill
labs(fill = "Cluster") +
	#scale_fill_grafify()+
	 grafify::scale_fill_grafify(palette = "kelly")


cur <- st_read( "D:/Dropbox/R_projects/SV_phenology/out/06.7_xr_data_7_elbow_cur.shp")



st_crs(cur) <- 32633

cur_deg <- st_transform(cur, crs = 4326)

A +
	geom_sf(data = cur_deg,size = 1.5)


# Estrai le coordinate lon e lat dalla colonna geometry
cur_deg <- cur_deg %>%
  mutate(lon = as.numeric(st_coordinates(geometry)[, 1]),
         lat = as.numeric(st_coordinates(geometry)[, 2]))


curdf <- cur_deg |> 
	as.data.frame() |> 
	dplyr::select(group, size, type, lon, lat) 


# Ora crea le linee
lines <- curdf %>%
  group_by(group) %>%
  arrange(group) %>%
  do({
    linea <- st_linestring(as.matrix(.[, c("lon", "lat")]))
    st_sf(group = .$group[1], 
    			size = .$size[1],
    			type = .$type[1],
    			geometry = st_sfc(linea, crs = 4326))
  })
linez <- st_as_sf(lines)

A +
	geom_sf(data = linez,
					size = 1.5, aes(colour = type), show.legend = F, arrow =  arrow(angle = 25, ends = "last",  length = unit(0.1, "cm"))) +
	scale_colour_manual(values = c("blue", "red"))


ggsave(here::here("out",  paste0("1.1.0_bioregions_europe.png")), width = 10, height = 10, dpi = 300, bg = "white")




write_sf(linez, here::here("data",  paste0("currents.shp")), overwrite = TRUE, append=FALSE)

```







```{r}

aveth <- ave |> filter(!is.na(bioregions)) |> 
	group_by(bioregions) |> 
	summarise(th = median(ave, na.rm = T)* 1.05)

ggplot(ave|>filter(!is.na(bioregions)), aes(doy, ave)) +
	geom_line() +
	geom_point(aes(colour = n)) +
	facet_wrap(~bioregions, ncol = 4) +
	theme_few() +
#	geom_ribbon(aes(ymin = ave - sd, ymax = ave + sd, fill = factor(K)), alpha = 0.65) +
	#scale_fill_grafify(palette = "kelly") +
	# remove legend
	#theme(legend.position = "none") +
	xlab("Day of the year") +
	ylab("Chlorophyll-a concentration (mg/m3)") +
	scale_colour_viridis(option = "magma")
	#geom_hline(data = aveth, aes(yintercept = th, colour = factor(K)), linetype = "dashed") #+
	#scale_colour_grafify(palette = "kelly") 



```

